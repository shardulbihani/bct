import pandas as pd
import numpy as np
import warnings
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn import metrics
from sklearn.preprocessing import scale

# Load the dataset
df = pd.read_csv("diabetes.csv")

# Split into features and target
X = df.drop('Outcome', axis=1)
y = df['Outcome']

# Normalize the features
X = scale(X)

# Split the data into train and test
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Train KNN classifier
knn = KNeighborsClassifier(n_neighbors=7)
knn.fit(X_train, y_train)

# Predict and evaluate
y_pred = knn.predict(X_test)

# Confusion Matrix and Metrics
cs = metrics.confusion_matrix(y_test, y_pred)
print("Confusion Matrix:\n", cs)
print("Accuracy:", metrics.accuracy_score(y_test, y_pred))
print("Error Rate:", (1 - metrics.accuracy_score(y_test, y_pred)))
print("Precision Score:", metrics.precision_score(y_test, y_pred))
print("Recall Score:", metrics.recall_score(y_test, y_pred))